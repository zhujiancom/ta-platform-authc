my-server-host: 47.102.101.181
my-db-server-host: 47.102.101.181

taplatform:
  shiro:
    enable: true
    anon:
      - /sys/login,/sys/logout,/sys/mLogin,/sys/sms,/sys/phoneLogin
      - /api/auth/**
      - /sys/user/checkOnlyUser,/sys/randomImage/**,/sys/getCheckCode
      - /sys/user/register
      # pdf 预览
      - /generic/**
      - /actuator/metrics/**,/actuator/httptrace/**,/actuator/redis/**
      # 排除字体格式的后缀
      - /**/*.ttf,/**/*.woff,/**/*.woff2
      - /,/index.html,/doc.html
      - /**/*.js,/**/*.css,/**/*.html,/**/*.svg,/**/*.pdf,/**/*.jpg,/**/*.png,/**/*.ico
      - /druid/**
      - /swagger-ui.html,/swagger**/**,/webjars/**,/v2/**
      # 排除websocket
      - /websocket/**


  #################################### JWT config start ###########################
  jwt:
    # jwt 密钥
    secret: 888888
    # 默认过期时间1小时，单位：秒
    expire-second: 36000
    #是否刷新token
    refresh-token: true
    # 刷新token的时间间隔，默认10分钟，单位：秒
    refresh-token-countdown: 600
    # redis校验jwt token是否存在,可选
    redis-check: true
    # true: 同一个账号只能是最后一次登录token有效，false：同一个账号可多次登录
    single-login: false
    # 盐值校验，如果不加自定义盐值，则使用secret校验
    salt-check: true
    #################################### JWT config end ###########################

    #################################### JWT config end ###########################
  swagger:
    enable: true
    base-package: com.ta.platform.authc
    description: 'restful 风格后台API接口'
    title: '税务自动化 权限验证模块 后台服务API接口文档'
    url:
    version: ${project.version}

  # 本地：local\Minio：minio\阿里云：alioss
  upload:
    type: local
    path:
      root: C:\app\filestore\platform
      webapp: C:\app\filestore\platform\webapp
  # 阿里云存储配置
  oss:
    endpoint: oss-cn-beijing.aliyuncs.com
    accessKey: WegDpuKzOuPK6D3N
    secretKey: ??
    bucketName: tax-ey-test
    staticDomain: ??
server:
  port: 9090
  servlet:
    compression:
      enabled: true
      mime-types: application/javascript,application/json,application/xml,text/html,text/xml,text/plain,text/css,image/*
    context-path: /authc
spring:
  application:
    name: authc-app
  #redis 配置
  redis:
    database: 8
    host: ${my-server-host}
    lettuce:
      pool:
        max-active: 8   #最大连接数据库连接数,设 0 为没有限制
        max-idle: 8     #最大等待连接中的数量,设 0 为没有限制
        max-wait: -1ms  #最大建立连接等待时间。如果超过此时间将接到异常。设为-1表示无限制。
        min-idle: 0     #最小等待连接中的数量,设 0 为没有限制
      shutdown-timeout: 100ms
    password: ''
    port: 6379
  jackson:
    date-format: yyyy-MM-dd HH:mm:ss
    time-zone: GMT+8
  datasource:
    url: jdbc:mysql://${my-db-server-host}:3306/ta_platform_authc?characterEncoding=UTF-8&useUnicode=true&useSSL=false&serverTimezone=Asia/Shanghai&tinyInt1isBit=false
    username: root
    password: 123456
    driver-class-name: com.mysql.cj.jdbc.Driver
    druid:
      initial-size: 5
      min-idle: 5
      max-active: 20
      # 获取连接等待超时的时间
      max-wait: 60000
      # 间隔多久进行一次检测， 检测需要关闭的空闲连接， 单位： 毫秒
      time-between-eviction-runs-millis: 60000
      # 配置一个连接在池中最小生存时间， 单位： 毫秒
      min-evictable-idle-time-millis: 300000
      validation-query: SELECT 1 FROM DUAL
      test-while-idle: true
      test-on-borrow: true
      test-on-return: true
      # 打开PSCache, 并且指定每个连接上的PSCache大小
      pool-prepared-statements: true
      max-pool-prepared-statement-per-connection-size: 20
      # 配置监控统计拦截的filters， 去掉后监控界面的SQL无法统计， 'wall' 用于防火墙, 如果需要flyway起作用， 则需将wall这个过滤器去除
      filters: stat,slf4j
      # 通过 connectProperties属性来打开mergeSql功能， 慢Sql记录
      connect-properties: druid.stat.mergeSql\=true;druid.stat.slowSqlMillis\=5000
      # 配置druid监控页面
      stat-view-servlet:
        login-username: admin
        login-password: 123456
      db-type: com.alibaba.druid.pool.DruidDataSource
  resource:
    static-locations: classpath:/static/,classpath:/public/
  flyway:
    locations: classpath:db/migration/mysql
    baseline-on-migrate: true
    out-of-order: true

  cloud:
    nacos:
      discovery:
        server-addr: ${my-server-host}:8848

#mybatis plus 设置
mybatis-plus:
  mapper-locations: classpath*:com/ta/platform/**/module/mapper/xml/*Mapper.xml
  global-config:
    db-config:
      id-type: 4
      table-underline: true
  configuration:
    # 这个配置会将执行的sql打印出来，在开发或测试的时候可以用
    log-impl: org.apache.ibatis.logging.stdout.StdOutImpl
    # 返回类型为Map,显示null对应的字段
    call-setters-on-nulls: true
#eureka:
#  client:
#    healthcheck:
#      enabled: true
#    serviceUrl:
#      defaultZone: http://${my-server-host}:8761/eureka/
#  instance:
#    statusPageUrlPath: ${server.servlet.context-path}/info
#    healthCheckUrlPath: ${server.servlet.context-path}/health
#    prefer-ip-address: true
